name: Multi-Platform Docker Build, Test, and Push

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU for multi-arch emulation
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build and load tgpt-code-interpreter image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          load: true
          tags: |
            localhost/bee-code-interpreter:local
            ghcr.io/ucsd-ets/tgpt-code-interpreter:latest
            ghcr.io/ucsd-ets/tgpt-code-interpreter:${{ steps.get_version.outputs.VERSION }}
          cache-from: type=registry,ref=ghcr.io/ucsd-ets/tgpt-code-interpreter:buildcache
          cache-to: type=registry,ref=ghcr.io/ucsd-ets/tgpt-code-interpreter:buildcache,mode=max

      - name: Build and load tgpt-code-executor image
        uses: docker/build-push-action@v6
        with:
          context: ./executor
          platforms: linux/amd64,linux/arm64
          load: true
          tags: |
            localhost/bee-code-executor:local
            ghcr.io/ucsd-ets/tgpt-code-executor:latest
            ghcr.io/ucsd-ets/tgpt-code-executor:${{ steps.get_version.outputs.VERSION }}
          cache-from: type=registry,ref=ghcr.io/ucsd-ets/tgpt-code-executor:buildcache
          cache-to: type=registry,ref=ghcr.io/ucsd-ets/tgpt-code-executor:buildcache,mode=max

      - name: Run repository build script
        run: bash scripts/run-build.sh

      - name: Create KinD cluster for integration tests
        uses: engineerd/setup-kind@v0.6.0
        with:
          version: v0.24.0

      - name: Wait for Kubernetes API
        run: kubectl cluster-info

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: latest

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run end-to-end tests
        run: |
          # Run the interpreter service and tests in parallel as per README
          nohup bash -c 'poetry run poe run' &
          sleep 10
          poetry run poe test

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push tgpt-code-interpreter image
        run: |
          docker push ghcr.io/ucsd-ets/tgpt-code-interpreter:latest
          docker push ghcr.io/ucsd-ets/tgpt-code-interpreter:${{ steps.get_version.outputs.VERSION }}

      - name: Push tgpt-code-executor image
        run: |
          docker push ghcr.io/ucsd-ets/tgpt-code-executor:latest
          docker push ghcr.io/ucsd-ets/tgpt-code-executor:${{ steps.get_version.outputs.VERSION }}
